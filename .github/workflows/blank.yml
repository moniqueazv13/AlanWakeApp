# Nome do workflow que aparecerá na aba "Actions" do GitHub
name: Android CI & Custom Test Coverage Report

on:
  pull_request:
    branches: [ "main" ]
  push:
    branches: [ "main" ]

jobs:
  test-and-coverage-report:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Gradle Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      # 1. COMANDO ATUALIZADO
      #    Agora executamos nossa tarefa personalizada 'jacocoTestReport'.
      - name: Run Unit Tests and Generate Custom JaCoCo Report
        run: ./gradlew jacocoTestReport

      # 2. CAMINHO DO XML ATUALIZADO
      #    Esta action agora lê o relatório XML gerado pela nossa nova tarefa.
      - name: Generate JaCoCo Report on PR
        if: github.event_name == 'pull_request'
        uses: madrapps/jacoco-report@v1.6.1
        with:
          # O caminho agora aponta para o relatório gerado pela 'jacocoTestReport'.
          paths: ${{ github.workspace }}/app/build/reports/jacoco/jacocoTestReport/jacocoTestReport.xml
          token: ${{ secrets.GITHUB_TOKEN }}
          min-coverage-overall: 40
          title: "📊 Relatório de Cobertura de Testes"
          update-comment: true

      # 3. CAMINHO DO HTML ATUALIZADO
      #    Esta action agora faz o upload da pasta correta do relatório HTML.
      - name: Upload Full Coverage Report
        uses: actions/upload-artifact@v4
        with:
          # Nome do artefato que aparecerá para download
          name: jacoco-html-report
          # O caminho agora aponta para a pasta gerada pela 'jacocoTestReport'.
          path: app/build/reports/jacoco/jacocoTestReport/